; ////////////////////////////////
; ///////// IPBVRS ///////////////
; ////////////////////////////////

; Interrupt put buffer videoram Sprite

; HL = Offset del buffer
; VOLCA buffer Sprite de 128 bytes A VRAM screen 1,2,3
; Basat en IPBVRM

; Cal RAM : res
; Toca	  : B,C,D,E
; Retorna : res
; Usa fun.: res
; Usa Contantes : SRP_FIJOS de VIDEO.RAM

IPBVRSALTER:
	ld	A,32
	sla	A
	sla	A
	ld 	B,A		; Volcada de 32 Sprites
	ld 	DE,VRM_SPA	; Prepara els ports per escritura a
	ld 	A,E		; regio de Sprites de VRAM
	out 	(99h),A
	ld 	A,D
	or 	40h
	out 	(99h),A
	ld 	C,98h		; Port a enviar del VDP [98h]
	
	ld	A,(TIMER_T)
	and	1
	cp	1
	jr	z,.INVERSO

	; De Incremento
	; Volcat dels SPRITES
	;otir
.LOOP_OUT:
	ld	A,(HL)
	out	(C),A
	inc	HL
	djnz	.LOOP_OUT
	ret
	; De decremento
.INVERSO:
	ld	A,[SPR_FIJOS*4]	; Deja los primeros igual
	ld	B,A
	;otir
.LOOP_OUT_FIX:
	ld	A,(HL)
	out	(C),A
	inc	HL
	djnz	.LOOP_OUT_FIX

	ld	DE,[[31-SPR_FIJOS]*4]
	add	HL,DE
	ld	B,[32-SPR_FIJOS]
.LOOP:
	push	BC
	ld	B,4
	;otir			; Volcat de 1 sprite [4bytes]
.LOOP_OUT_INV:
	ld	A,(HL)
	out	(C),A
	inc	HL
	djnz	.LOOP_OUT_INV
	
	pop	BC
	ld	DE,-8		; Tirem enrrera 8 posicion
	add	HL,DE		; que es l'sprite que acabem de posar
				; i el que volem posar
;	dec	HL		; 9 +1 pel otir que resta HL al acabar
	djnz	.LOOP
IPBVRS_END:
	ret
