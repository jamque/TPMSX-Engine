; ////////////////////////////////
; //////// SET48K /////////////
; ////////////////////////////////

SET48K:
	call	SETPAGES32K
	call	setrompage0
	ret

	; -----------------------------------------------------
	; --- RUTINAS PARA COLOCAR LAS PAGINAS DEL CARTUCHO ---
	; -----------------------------------------------------
	; --- SIEMPRE DEBEN IR EN LA PAGINA 1 DEL CARTUCHO! ---
	; -----------------------------------------------------
	; --- RUTINAS PRINCIPALES DEL MODULO ---
	; GETSLOT:	OBTIENE EL VALOR DEL SLOT QUE LE INDIQUEMOS
	; SETPAGES32K:	BIOS-ROM-YY-ZZ	 -> BIOS-ROM-ROM-ZZ [SITUA PAGINA 2]
	; --- VARIABLES EN RAM NECESARIAS ---
	; NINGUNA
GETSLOT:
	; --- Rutina que construye el valor del SLOT para llamar a ENASLT ---
	; --- Entrada: a = SLOT                                           ---
	; --- Salida: a = valor para ENASLT                               ---
	; --- AUTOR: Konamiman                                            ---
	and	03h	; Proteccion, nos aseguramos de que el valor esta en 0-3
	ld	c,a	; c = slot de la pagina
	ld	b,0	; bc = slot de la pagina
	ld	hl,0FCC1h ; Tabla de slots expandidos
	add	hl,bc	; hl -> variable que indica si este slot esta expandido
	ld	a,(hl)	 ; Tomamos el valor
	and	80h	 ; Si el bit mas alto es cero...
	jr	z,.EXIT ; ...nos vamos a .EXIT
	; --- El slot esta expandido ---
	or	c	; Slot basico en el lugar adecuado
	ld	c,a	; Guardamos el valor en c
	inc	hl	; Incrementamos hl una...
	inc	hl	; ...dos...
	inc	hl	; ...tres...
	inc	hl	; ...cuatro veces
	ld	a,(hl)	; a = valor del registro de subslot
			;  del slot donde estamos
	and	0Ch	; Nos quedamos con el valor donde esta nuestro cartucho
.EXIT:
	or	c	; Slot extendido/basico en su lugar
	ret	; Volvemos

SETPAGES32K:	; --- Posiciona las paginas de un megarom o un 32K ---
	ld	a,0C9h		; Codigo de RET
	ld	(.NOPRET),a	; Modificamos la siguiente instruccion
				; si estamos en RAM
.NOPRET:	nop		; No hacemos nada si no estamos en RAM
; --- Si llegamos aqui no estamos en RAM, hay que posicionar la pagina ---
	call	RSLREG 	; Leemos el contenido del registro de seleccion de slots
	rrca		; Rotamos a la derecha...
	rrca		; ...dos veces
	call	GETSLOT	; Obtenemos el slot de la pagina 1 [4000-0BFFFh]
	ld	h,80h	; Seleccionamos pagina 2 [8000h-0BFFFh]
	jp	ENASLT	; Posicionamos la pagina 2 y volvemos

; -----------------------
; SEARCH_SLOTSET
; Posiciona en pagina 2
; Nuestro ROM.
; -----------------------

search_slotset:
	call search_slot
	jp ENASLT


; -----------------------
; SEARCH_SLOT
; Busca slot de nuestro rom
; -----------------------

search_slot:
	call RSLREG
	rrca
	rrca
	and 3
	ld c,a
	ld b,0
	ld hl,0FCC1h
	add hl,bc
	ld a,(hl)
	and 080h
	or c
	ld c,a
	inc hl
	inc hl
	inc hl
	inc hl
	ld a,(hl)
	and 0Ch
	or c;
	ld h,080h
	ld (slotvar),a
	ret

; ------------------------------
; SETROMPAGE0
; Posiciona nuestro cartucho en
; Pagina 0
; -----------------------------

setrompage0:
;	call	GETSLOT
	call	search_slotset
	ld a,(slotvar)
	jr setslotpage0
; ------------------------------
; RECBIOS
; Posiciona la bios ROM
; -------------------------------
recbios:
	ld a,(EXPTBL)
; ---------------------------
; SETSLOTPAGE0
; Posiciona el slot pasado
; en pagina 0 del Z80
; A: Formato FxxxSSPP
; ----------------------------

setslotpage0:
	di
	ld b,a ; B = Slot param in FxxxSSPP format
	in a,(0A8h)
	and 011111100b
	ld d,a ; D = Primary slot value
	ld a,b
	and 03
	or d
	ld d,a ; D = Final Value for primary slot
	; Check if expanded
	ld a,b
	bit 7,a
	jr z,recbiosprimary ; Not Expanded
	and 03h
	rrca
	rrca
	and 011000000b
	ld c,a
	ld a,d
	and 00111111b
	or c
	ld c,a ; Primary slot value with main slot in page 3
	ld a,b
	and 00001100b
	rrca
	rrca
	and 03h
	ld b,a ; B = Expanded slot in page 3
	ld a,c
	out (0A8h),a ; Slot : Main Slot, xx, xx, Main slot
	ld a,(0FFFFh)
	cpl
	and 011111100b
	or b
	ld (0FFFFh),a ; Expanded slot selected

recbiosprimary:
	ld a,d ; A = Final value
	out (0A8h),a
	; Slot Final. Ram, rom c, rom c, Main
	ret 
