; Rutines per Ratoli
;
; GETMOUSE- Retorna a HL Valor XY del ratoli


; //////////////////////////////////
; ///////// MOUSE_IS ///////////////
; //////////////////////////////////
; Inicia les variable del ratoli
; Cal RAM : MOUSEX, MOUSEY, MOUSESPR
; Toca	  : res
; Retorna : res
; Usa fun.:

MOUSE_IS:
	ld	B,0FFh
	ld	A,(MOUSERELX)
	cp	B
	jr	nz,.CONTROL_MOUSE
	ld	A,(MOUSERELX)
	cp	B
	jr	nz,.CONTROL_MOUSE
	xor	A
	ld	(MOUSEON),A
	ret
.CONTROL_MOUSE:
	ld	A,1
	ld	(MOUSEON),A
.END:
	ret

; //////////////////////////////////
; ///////// MOUSEINI ///////////////
; //////////////////////////////////
; Inicia les variable del ratoli
; Cal RAM : MOUSEX, MOUSEY, MOUSESPR
; Toca	  : res
; Retorna : res
; Usa fun.:

MOUSEINI:
	ld	A,[256/2]-8	; Mitad de la pantalla y sprite mouse 16px
	ld	(MOUSEX),A
	ld	A,[212/2]-8	; Mitad de la pantalla y sprite mouse 16px
	ld	(MOUSEY),A
	xor	A
	ld	(MOUSESPR),A
	ret

; //////////////////////////////////
; ///////// GETMOUSE ///////////////
; //////////////////////////////////
; basado en rutina de Edwin de MSX.org [24/10/2009]
; edwin@balpol.tudelft.nl

; Agafa els valors x y del ratoli
; i guarda a MOUSERELX,MOUSERELY

; D E=.... Port del ratolí

; Cal RAM : MOUSERELX,MOUSERELY
; Toca	  : C,D,E
; Retorna : MOUSERELX=X-offset
;	    MOUSERELY=Y-offset
;	    X=Y=255 if no mouse is present!
; Usa fun.:

GETMOUSE:
        ld    D,10010011b     ; Use these values for a mouse in port 1
        ld    E,00010000b
;        ld    D,11101100b     ; Use these values for a mouse in port 2
;        ld    E,00100000b

; Read the mouse.   Input: D/E=.... Output: H=X-offset, L=Y-offset
; Note that the routine will output H=L=255 if no mouse is present!
GTMOUS:
        ld	B,30         	; Long delay for first read
        call  	.GTOFS2        ; Read bit 7-4 of the x-offset
        and   	0Fh
	rlca
        rlca
        rlca
        rlca
        ld    	C,A
        call  	.GTOFST        ; Read bit 3-0 of the x-offset
        and   	0Fh
        or    	C
        ld    	(MOUSERELX),A   ; Store combined x-offset
        call  	.GTOFST        ; Read bit 7-4 of the y-offset
        and   	0Fh
        rlca
        rlca
        rlca
        rlca
        ld    	C,A
        call  	.GTOFST        ; Read bit 3-0 of the y-offset
        and   	0fH
        or    	C
        ld    	(MOUSERELY),A   ; Store combined y-offset
        ret

.GTOFST:
	ld    	B,10		; Short delay value
.GTOFS2:
	ld    	A,15            ; Read psg register 15 voor mouse
        out   	(0A0h),A
        ld    	A,D
        out   	(0A1h),A
        xor   	E
        ld    	D,A

.WAIT:	djnz	.WAIT           ; Extra delay because the mouse is slow.

        ld    A,14
        out   (0A0h),A
        in    A,(0A2h)
        ret



